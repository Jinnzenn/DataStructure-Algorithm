package Chapter301ModelAndPrototype.Section102ConcurrentProgramming.PrintABCInOrder;

//????????????????????????
//??????????????????prev??????????self
public class ABC_SynchDeadLock {
    public static class ThreadPrinter implements Runnable {
        private String name;
        private Object prev;
        private Object self;

        private ThreadPrinter(String name, Object prev, Object self) {
            this.name = name;
            this.prev = prev;
            this.self = self;
        }

        @Override
        public void run() {
            int count = 1000;
            while (count > 0) {// ????????????????if?????????while???
                synchronized (prev) { // ???? prev ??
                    synchronized (self) {// ???? self ??
                        System.out.print(name);// ???
                        count--;
						//?????self???????????????????self?????
                        self.notifyAll();// ??????????????self?????????self????δ????????
                    }
                    // ????????self??????飬???self????????
                    try {
                        if (count == 0) {// ???count==0,????????????δ???????????notifyAll??????????????
                            prev.notifyAll();
                        } else {
                            prev.wait(); // ??????? prev??????????????????????
                        }
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }

    public static void main(String[] args) throws Exception {
        Object a = new Object();
        Object b = new Object();
        Object c = new Object();
        ThreadPrinter pa = new ThreadPrinter("A", c, a);
        ThreadPrinter pb = new ThreadPrinter("B", a, b);
        ThreadPrinter pc = new ThreadPrinter("C", b, c);

        new Thread(pa).start();
        //Thread.sleep(10);// ??????ABC???????????????
        new Thread(pb).start();
        //Thread.sleep(10);
        new Thread(pc).start();
        //Thread.sleep(10);
    }
}


//?????????????????????????????????